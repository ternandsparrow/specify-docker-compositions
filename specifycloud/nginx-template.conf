{% for server, serverdef in servers.items() %}
server {
    listen 80;
    server_name {{ server }}.*;
    
    # The LetsEncrypt pass-though.
    location /.well-known/ {
             root /var/www/;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    # This stanza defines the HTTPS end point.
    listen 443 ssl;
    server_name {{ server }}.*;
    
    ssl_certificate /etc/letsencrypt/live/{{ server }}.specifycloud.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ server }}.specifycloud.org/privkey.pem;

    # from https://cipherli.st/
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # The LetsEncrypt pass-though. I'm not sure if this is needed
    # on HTTPS side, but I'm including it just in case.
    location /.well-known/ {
             root /var/www/;
    }
    
    root /usr/share/nginx;

    location /static/ {
        root /volumes;
        rewrite ^/static/config/(.*)$ /{{ serverdef.sp6 }}/config/$1 break;
        rewrite ^/static/depository/(.*)$ /static-files-{{ server }}/depository/$1 break;
        rewrite ^/static/(.*)$ /static-files-{{ server }}/frontend-static/$1 break;
    }

    location / {
        resolver 127.0.0.11 valid=30s;
        set $backend "http://{{ server }}:8000";
        proxy_pass $backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # set $backend "{{ server }}:3031";
        # include uwsgi_params;
        # uwsgi_pass $backend;
    }
}

{% endfor %}
